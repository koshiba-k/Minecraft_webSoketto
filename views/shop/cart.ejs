<script src="/js/cart-sync.js"></script>
<script>restoreCartToServerIfNeeded();</script>

<h1 class="cart-title">購入予定リスト（カート）</h1>

<% if (cartItems.length === 0) { %>
    <div class="cart-empty-block">
        <h3>カートが空です</h3>
        <p><a href="/shop" class="btn">ショップに戻る</a></p>
    </div>
<% } else { %>
    <div class="cart-card">
        <h2>カート内のアイテム</h2>
        <table class="cart-table">
          <thead>
            <tr>
              <th>商品写真</th>
              <th>名前</th>
              <th>個数</th>
              <th>更新</th>
              <th>金額</th>
              <th>削除</th>
            </tr>
          </thead>
          <tbody>
            <% cartItems.forEach(function(cartItem) { %>
              <tr>
                <td><img src="<%= cartItem.item.imagePath %>" alt="<%= cartItem.item.name %>" class="cart-table-img"></td>
                <td><div class="item-name"><%= cartItem.item.name %></div></td>
                <td>
                  <form class="update-quantity-form" onsubmit="return updateCartQuantity(event, <%= cartItem.itemId %>)">
                    <input type="number" name="quantity" value="<%= cartItem.quantity %>" min="1" class="cart-quantity-input" style="width:60px;text-align:center;">
                </td>
                <td>
                    <button type="submit" class="btn cart-update-btn">更新</button>
                  </form>
                </td>
                <td><div class="item-total"><%= cartItem.itemTotal.toLocaleString() %>円</div></td>
                <td><button type="button" class="btn btn-danger cart-remove-btn" onclick="removeFromCart(<%= cartItem.itemId %>)">削除</button></td>
              </tr>
            <% }); %>
          </tbody>
        </table>
        <div class="cart-total-block">
            <div class="cart-total-row">
                <h3>合計金額: <span class="cart-total-price"><%= totalPrice.toLocaleString() %>円</span></h3>
                <div class="cart-balance-block">
                    <div class="cart-balance-now">現在の所持金: <span class="cart-balance-value"><%= user.balance.toLocaleString() %>円</span></div>
                    <div class="cart-balance-after <%= user.balance >= totalPrice ? 'cart-balance-enough' : 'cart-balance-lack' %>">購入後残高: <%= (user.balance - totalPrice).toLocaleString() %>円</div>
                </div>
            </div>
            <% if (user.balance >= totalPrice) { %>
                <button type="button" class="btn btn-success cart-purchase-btn-narrow" onclick="purchase()">購入確定</button>
            <% } else { %>
                <div class="error cart-error-block">
                    所持金が不足しています。アイテムを削除するか、数量を減らしてください。
                </div>
                <button type="button" class="btn cart-purchase-btn-narrow" disabled>購入確定</button>
            <% } %>
        </div>
    </div>
    <div class="cart-back-shop">
        <a href="/shop" class="btn">ショップに戻る</a>
    </div>
<% } %>

<script>
function updateCartQuantity(event, itemId) {
  event.preventDefault();
  const form = event.target;
  const quantity = form.quantity.value;
  fetch('/shop/update-cart-quantity', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ itemId, quantity })
  })
  .then(res => res.json())
  .then(data => {
    if (data.success) {
      showPopup('数量を更新しました');
      setTimeout(() => location.reload(), 500);
    } else {
      showPopup('更新に失敗しました');
    }
  });
  return false;
}

function removeFromCart(itemId) {
  fetch('/shop/remove-from-cart', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ itemId })
  })
  .then(res => res.json())
  .then(data => {
    if (data.success) {
      removeFromCartLocal(itemId); // localStorageにも反映
      showPopup('カートから削除しました');
      location.reload();
    } else {
      showPopup('削除に失敗しました');
    }
  })
  .catch(error => {
    console.error('Error:', error);
    showPopup('エラーが発生しました');
  });
}

function purchase() {
  // すべての数量inputを取得し、サーバーに反映してから購入
  const forms = document.querySelectorAll('.update-quantity-form');
  const updates = [];
  forms.forEach(form => {
    const itemId = form.getAttribute('onsubmit').match(/,\s*(\d+)\)/)[1];
    const quantity = form.quantity.value;
    updates.push(fetch('/shop/update-cart-quantity', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ itemId, quantity })
    }));
  });
  Promise.all(updates).then(() => {
    fetch('/shop/purchase', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' }
    })
    .then(res => res.json())
    .then(data => {
      if (data.success) {
        showPopup('購入が完了しました');
        setTimeout(() => location.reload(), 800);
      } else {
        showPopup(data.error || '購入に失敗しました');
      }
    });
  });
}
</script> 